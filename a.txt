git init - 初始化创建仓库
	・ 会创建出一个隐藏的.git文件夹，所有的操作历史将存入这   里
git status 查看目录文件状态
Untracked 未追踪
git add filename 管理文件  git commit 提交信息 要登录邮箱和名字
git config --global user.name "delicious" git config --global user.email "837788353@qq.com" git config --global -l 

git commit  ctrl + i 插入编写模式  ESC  ZZ  保存模式 或者 ctrl+: :wq 等模式  git status   git log  esc + qq 退出模式

 git commit -m '添加了所有文件  手动删除 d.txt   git status  出现乱码文件名中文 解决 git config --global core.quotepath false  Changes not staged for commit:   deleted:    d.txt 所以不可以提交  解决git rm a - 副本.txt 
git rm d.txt rm 'd.txt' git status   (use "git restore --staged <file>..." to unstage) deleted:    d.txt Changes not staged for commit:   modified:   a.txt   git commit -m '删除了一个C文件'
 git log  git status  touch 110.txt git rm 110.txt  git rm ax.txt   git status  git commit -m '删除了110.txt文件'  git log   touch 5.txt 6.txt 7.txt 8.txt 9.txt 10.txt 11.txt git add . git commit -m '再次提交不希望有11.txt'  git rm --cache 11.txt rm '11.txt' git status Untracked files:  11.txt (use "git restore --staged <file>..." to unstage) deleted: 11.txt 不小提到暂存区里面 使用取消命令--cache 	3. 删除Git仓库中的，保留工作目录中的文件 - git rm --cache <file>
 

存储： 当在一个分支中向暂存区添加内容，切换到另一个分支时，提交commit会带上另一分支中的暂存内容。 git stash 存储暂存区及工作目录修改文件 git stash -u 在上面的基础上带上未追踪文件 git stash list 打印所有存储内容 git stash apply <stashName> 将存储内容重新应用（默认不保留已暂存内容） git stash apply --index 将原暂存依旧以暂存进行取出 git stash drop 移除存储
避免一个分支提交 把另一个分支的存储提交上去  场景添加暂存区时不希望这个文件添加 切换另一个分支提交再来提交
修改了s.txt文件内容  git add .