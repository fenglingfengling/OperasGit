git init - 初始化创建仓库
	・ 会创建出一个隐藏的.git文件夹，所有的操作历史将存入这   里
git status 查看目录文件状态
Untracked 未追踪
git add filename 管理文件  git commit 提交信息 要登录邮箱和名字
git config --global user.name "delicious" git config --global user.email "837788353@qq.com" git config --global -l 

git commit  ctrl + i 插入编写模式  ESC  ZZ  保存模式 或者 ctrl+: :wq 等模式  git status   git log  esc + qq 退出模式

 git commit -m '添加了所有文件  手动删除 d.txt   git status  出现乱码文件名中文 解决 git config --global core.quotepath false  Changes not staged for commit:   deleted:    d.txt 所以不可以提交  解决git rm a - 副本.txt 
git rm d.txt rm 'd.txt' git status   (use "git restore --staged <file>..." to unstage) deleted:    d.txt Changes not staged for commit:   modified:   a.txt   git commit -m '删除了一个C文件'
 git log  git status  touch 110.txt git rm 110.txt  git rm ax.txt   git status  git commit -m '删除了110.txt文件'  git log   touch 5.txt 6.txt 7.txt 8.txt 9.txt 10.txt 11.txt git add . git commit -m '再次提交不希望有11.txt'  git rm --cache 11.txt rm '11.txt' git status Untracked files:  11.txt (use "git restore --staged <file>..." to unstage) deleted: 11.txt 不小提到暂存区里面 使用取消命令--cache 	3. 删除Git仓库中的，保留工作目录中的文件 - git rm --cache <file>
 

git进阶阶段 rebase变基 ： 和merge同样都是进行合并操作的。 将一个分支的内容都移至另一个分支上 工作流程： 1. 首先找到两个分支的共同祖先 2. 然后对比当前分支与祖先的历次提交，进行提取相应修改，并保存为临时文件，将当前分支指向目标基底，最后将之前存为临时文件的修改依序应用
别名 有时候觉得常用的命令字母多了点，例如： git checkout 我们输入的时候，会花费很长的时间，那不如给它取个别名吧~ git config --global alias.co checkout ** 不是任何东西都可以取别名的，还需要熟悉命名规则，建议可以观看下命令行相关的视频：


