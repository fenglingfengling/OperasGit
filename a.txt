git init - 初始化创建仓库
	・ 会创建出一个隐藏的.git文件夹，所有的操作历史将存入这   里
git status 查看目录文件状态
Untracked 未追踪
git add filename 管理文件  git commit 提交信息 要登录邮箱和名字
git config --global user.name "delicious" git config --global user.email "837788353@qq.com" git config --global -l 

git commit  ctrl + i 插入编写模式  ESC  ZZ  保存模式 或者 ctrl+: :wq 等模式  git status   git log  esc + qq 退出模式

 git commit -m '添加了所有文件  手动删除 d.txt   git status  出现乱码文件名中文 解决 git config --global core.quotepath false  Changes not staged for commit:   deleted:    d.txt 所以不可以提交  解决git rm a - 副本.txt 
git rm d.txt rm 'd.txt' git status   (use "git restore --staged <file>..." to unstage) deleted:    d.txt Changes not staged for commit:   modified:   a.txt   git commit -m '删除了一个C文件'
 git log  git status  touch 110.txt git rm 110.txt  git rm ax.txt   git status  git commit -m '删除了110.txt文件'  git log   touch 5.txt 6.txt 7.txt 8.txt 9.txt 10.txt 11.txt git add . git commit -m '再次提交不希望有11.txt'  git rm --cache 11.txt rm '11.txt' git status Untracked files:  11.txt (use "git restore --staged <file>..." to unstage) deleted: 11.txt 不小提到暂存区里面 使用取消命令--cache 	3. 删除Git仓库中的，保留工作目录中的文件 - git rm --cache <file>
 
修改a1-1.txt内容 git status  modified: a1-1.txt Untracked files:  11.txt  git rm  a1-1.txt  git rm  -f a1-1.txt 留在工作目录中 git rm -f(force) <file> - 强制删除  git commit -m '删除了a1-1.txt 
touch zm.txt1 git add . git commit -m '创建zm.txt1文件' mkdir first git mv zm.txt1 first/zm.txt1 git mv file_from file_to 1.重命名 1.重命名 mv file_from file_to git rm file_from git add file_to	
git add t.txt git status -s git status -s AM r.txt A  t.txt ?? tytxt  short 符号 ?? 未追踪文件 A 添加到暂存区的 右 M 被修改但是未放入暂存区 MM 被修改后放入暂存区并且有再次修改 左M 被修改后放入暂存区 R 重命名文件 D 删除的文件
git add r.tx   git commit -m '提交'  git status -s  git add tytxt  git  status -s AM tytxt提交暂存区并修改 git add .   git  status-s s  A  tytxt git commit -m '第二次提交'  git status -s  git status -s  M t.txt  git add .  
git status -s M  t.txt   git  status -s  MM t.txt 暂存修改又修改   git add -s  git commit -m '第三次提交'    
手动删除 d.txt  git status -s  D 6.txt  git rm 6.txt  git commit -m '删除提交'  mv t.txt tt.txt git  status -s v git mv tt.txt t.txt git status -s git mv t.txt tt.txt  git status -s  R  t.txt -> tt.txt  git  commit -m '提交修改名字'

11 合并  checkout -b branch12